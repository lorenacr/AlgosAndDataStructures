name: Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run tests with coverage
      run: |
        dotnet test --configuration Release --no-restore \
          --collect:"XPlat Code Coverage" \
          --logger trx
          
    - name: Convert coverage reports
      run: |
        # Convert coverage.xml to cobertura format
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator \
          -reports:./**/coverage.cobertura.xml \
          -targetdir:./CoverageResults \
          -reporttypes:"Cobertura"
          
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./CoverageResults/Cobertura.xml
        flags: dotnet
        name: dotnet-tests
        fail_ci_if_error: true
        verbose: true

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coveragereport/

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults/
